# Creative Muse AI - Security-Specific Dependencies

# Advanced Cryptography
pynacl>=1.5.0
cryptography>=41.0.7
pycryptodome>=3.19.0
pyopenssl>=23.3.0

# Password Hashing & Key Derivation
argon2-cffi>=23.1.0
bcrypt>=4.1.2
# scrypt>=0.8.20  # Problematisch auf macOS, verwende argon2 stattdessen

# Secure Random Number Generation (secrets ist ein eingebautes Python-Modul)
# secrets ist bereits in Python enthalten
# os-urandom>=1.0.0  # Nicht verfügbar, verwende eingebaute os.urandom

# Certificate Management
certifi>=2023.11.17
pyopenssl>=23.3.0

# Security Auditing
bandit>=1.7.5
safety>=2.3.5
semgrep>=1.45.0

# Input Validation & Sanitization
bleach>=6.1.0
html5lib>=1.1
defusedxml>=0.7.1
validators>=0.22.0

# Rate Limiting & Throttling
slowapi>=0.1.9
limits>=3.6.0

# Session Security
itsdangerous>=2.1.2
pyjwt>=2.8.0

# Network Security
requests[security]>=2.31.0
urllib3[secure]>=2.1.0

# Database Security
# sqlcipher3>=0.5.2  # Problematisch auf macOS, verwende normale SQLite mit Anwendungsebenen-Verschlüsselung
sqlalchemy-utils>=0.41.1

# Monitoring & Intrusion Detection
watchdog>=3.0.0
psutil>=5.9.6

# Secure File Operations (verwende eingebaute tempfile und os Module)
# secure-delete>=1.0.0  # Nicht verfügbar, implementiere eigene sichere Löschung
# tempfile-secure>=1.0.0  # Nicht verfügbar, verwende eingebautes tempfile

# Compliance & Auditing (implementiere eigene Lösungen)
# audit-python-security>=1.0.0  # Nicht verfügbar
# compliance-checker>=1.0.0  # Nicht verfügbar

# Memory Protection (implementiere eigene Lösungen)
# pymemprotect>=1.0.0  # Nicht verfügbar
# secure-memory>=1.0.0  # Nicht verfügbar

# Anti-Tampering (implementiere eigene Lösungen)
# integrity-checker>=1.0.0  # Nicht verfügbar
# file-integrity>=1.0.0  # Nicht verfügbar

# Secure Communication
tls-parser>=2.0.0
# ssl-checker>=1.0.0  # Nicht verfügbar, implementiere eigene SSL-Prüfung